#
# Library functions used in the goals below
#

@lib templating
  from-template() { 
    config="./.env"
    template="$1"
    destination="$2"

    cp "$template" "$destination"

    while read line; do
      setting="$( echo "$line" | cut -d '=' -f 1 )"
      value="$( echo "$line" | cut -d '=' -f 2- )"
      sed -i -e "s;%${setting}%;${value};g" "$destination"
    done < "$config"
  }

###
# Make sure system dependencies are installed
###

@goal dependencies_installed
@doc Installs all dependencies
@depends_on docker_installed
@depends_on docker_compose_installed

# Docker
@goal docker_installed
@doc Installs Docker from the install script
@reached_if which docker > /dev/null 2>&1
  curl -fsSL https://get.docker.com -o /tmp/get-docker.sh
  sudo sh /tmp/get-docker.sh
  rm /tmp/get-docker.sh
  sudo usermod -aG docker pi

# Docker Compose
@goal docker_compose_installed
@doc Installs docker-compose from pip3
@reached_if which docker-compose > /dev/null 2>&1
  sudo apt-get install -y libffi-dev libssl-dev python3-dev python3 python3-pip
  sudo pip3 install docker-compose

###
# Make sure config files needed to get everything running are generated
###

@goal config_generated
@doc Ensures everything is generated
@depends_on caddy_generated
@depends_on grafana_generated
@depends_on code_ssh_linked
@depends_on code_gitconfig_linked

@goal caddy_generated
@doc Generates the caddy config from the template, substituting in any secrets from .env
@use_lib templating
    from-template caddy/Caddyfile.template caddy/Caddyfile

@goal grafana_generated
@doc Generates the grafana config from the template, substituting in any secrets from .env
@use_lib templating
    from-template grafana/config.monitoring.template grafana/config.monitoring

@goal code_ssh_linked
@doc Links the host machines .ssh directory with the code server server one
    rm -rf ./code/config/.ssh
    cp -rf $HOME/.ssh ./code/config/.ssh

@goal code_gitconfig_linked
@reached_if [[ -f ./code/config/.gitconfig ]]
@doc Links the host machines .gitconfig file with the code server server one
    rm -f ./code/config/.gitignore
    cp $HOME/.gitconfig ./code/config/.gitconfig

###
# Ensure all services are running
###

@goal running
@depends_on docker_compose_running
@depends_on dhclient_refresh_installed

@goal docker_compose_running
@doc Ensures the docker compose services are running
  docker-compose build asus_dns
  docker-compose build caddy
  docker-compose up -d --remove-orphans

@goal dhclient_refresh_installed
@doc Ensures the dhclient refresh service and timer are installed and running
  cd dhclient
  ./install-service.sh

###
# The default goal which ensures that everything is set up and running correctly
###

@goal default
@depends_on dependencies_installed
@depends_on config_generated
@depends_on running
